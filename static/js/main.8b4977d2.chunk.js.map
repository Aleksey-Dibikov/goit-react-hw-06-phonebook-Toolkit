{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsForm/ContactsForm.module.css","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","contacts","id","name","number","combineReducers","items","state","type","payload","types","filter","rootReducer","contactsReducer","store","createStore","composeWithDevTools","visibleContacts","allContacts","normalizedFilter","toLowerCase","includes","connect","dispatch","onDeleteContact","className","s","TaskList","map","TaskList_item","TaskList_button","onClick","onAddContact","uuidv4","addContact","useState","setName","setNumber","nameId","numberId","handleInputChange","e","target","value","onSubmit","preventDefault","TaskEditor","TaskEditor_label","TaskEditor_input","pattern","title","required","onChange","TaskEditor_button","onChangeFilter","event","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b4977d2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__30w08\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__3nGRp\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__1kIx3\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__38JpI\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__5eeu0\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__qlp6E\"};","export default {\r\n    ADD: 'contact/add',\r\n    DELETE: 'contact/delete',\r\n    FILTER: 'contact/filter',\r\n};","import { combineReducers } from \"redux\";\r\nimport types from './contacts-types';\r\n\r\nconst contacts = [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = (state = contacts, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n    \r\n    case types.DELETE:\r\n      return state.filter(({id}) => id !== payload);\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', {type, payload}) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n        \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n})","import { combineReducers, createStore } from \"redux\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    contacts: contactsReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactList.module.css';\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n\r\n  return (\r\n    <ul className={s.TaskList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.TaskList_item}>\r\n          {name} : {number}\r\n          <button\r\n            className={s.TaskList_button}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nconst visibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({name}) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({contacts: {items, filter}}) => ({\r\n  contacts: visibleContacts(items, filter)\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import types from './contacts-types'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst addContact = ({name, number}) => ({\r\n    type: types.ADD,\r\n    payload: {\r\n        id: uuidv4(),\r\n        name,\r\n        number,\r\n    },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n    type: types.DELETE,\r\n    payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n    type: types.FILTER,\r\n    payload: value,\r\n})\r\n\r\nexport { addContact, deleteContact, changeFilter };","import PropTypes from 'prop-types';\r\nimport { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { addContact } from '../../redux/contacts/contacts-actions';\r\nimport s from './ContactsForm.module.css';\r\n\r\nfunction ContactsForm({ onAddContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = uuidv4();\r\n  const numberId = uuidv4();\r\n\r\n  const handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onAddContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={s.TaskEditor}>\r\n      <label id={nameId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={nameId}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв,\r\n            апострофа, тире и пробелов.\r\n            Например Adrian, Jacob Mercer,\r\n            Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <label id={numberId} className={s.TaskEditor_label}>\r\n        <input\r\n          className={s.TaskEditor_input}\r\n          id={numberId}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          value={number}\r\n          onChange={handleInputChange}\r\n        />\r\n      </label>\r\n      <button className={s.TaskEditor_button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onAddContact: ({name, number}) => dispatch(addContact({name, number})),\r\n  }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactsForm)\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ value, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        className={s.TaskEditor_input}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChangeFilter}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeFilter: (event) => dispatch(changeFilter(event.target.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)","import './App.css';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport ContactsForm from './components/ContactsForm/ContactsForm';\r\nimport Filter from './components/Filter/Filter';\r\n\r\nfunction App() {\r\n  // const [contacts, setContacts] = useState([\r\n  //   { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  //   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  //   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  //   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  // ]);\r\n  // const [filter, setFilter] = useState('');\r\n\r\n  // useEffect(() => {\r\n  //   const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n  //   if (parsedContacts) {\r\n  //     setContacts(parsedContacts);\r\n  //   }\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   localStorage.setItem('contacts', JSON.stringify(contacts));\r\n  // }, [contacts]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Phonebook</h1>\r\n      <ContactsForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}> \r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__3a48x\",\"TaskList_item\":\"ContactList_TaskList_item__1ICyn\",\"TaskList_button\":\"ContactList_TaskList_button__3UxPE\"};"],"sourceRoot":""}